#include <avr/io.h>          // Include AVR I/O definitions
#include <avr/interrupt.h>   // Include interrupt handling functions

int main(void)
{
  DDRB = 0xFF;              // Set all pins of port B as output
  UDR0 = 'p';               // Transmit the character 'p' via UART
  UBRR0 = 0x67;             // Set baud rate for UART communication
  UCSR0A = 0x00;            // Configure control and status register A for UART
  UCSR0B = 0xD8;            // Configure control and status register B for UART
  UCSR0C = 0x06;            // Configure control and status register C for UART
  PORTB = 0x00;             // Set all pins of port B to low (initially off)

  sei();                    // Enable global interrupts

  while(1)
  {
    // Infinite loop, program execution stays here
  }
}

ISR((USART_TX_vect))        // USART Transmit Interrupt Service Routine
{
  UDR0 = 'G';               // Transmit the character 'G' via UART
}

ISR((USART_RX_vect))        // USART Receive Interrupt Service Routine
{
  if (UDR0 == 'A')          // Check if received character is 'A'
  {
    PORTB = 0xFF;           // Set all pins of port B to high (turn on LEDs)
  }
  else if (UDR0 == 'B')     // Check if received character is 'B'
  {
    PORTB = 0x00;           // Set all pins of port B to low (turn off LEDs)
  }
}
